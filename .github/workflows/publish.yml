name: Publish to PyPI

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  publish:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    env:
      PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1
      
      - name: Check version changes and bump if needed
        run: |
          # Check if version line in pyproject.toml has changed
          if git diff origin/main...HEAD -- pyproject.toml | grep -q "^[+|-]version"; then
            echo "Version already updated in PR"
          else
            echo "No version change detected, bumping patch version"
            # Get current version
            CURRENT_VERSION=$(grep -m 1 "version = " pyproject.toml | sed 's/version = "\(.*\)"/\1/')
            # Split the version into major.minor.patch
            IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
            # Increment patch version
            NEW_PATCH=$((PATCH + 1))
            NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
            # Update version in pyproject.toml
            sed -i "s/version = \"$CURRENT_VERSION\"/version = \"$NEW_VERSION\"/" pyproject.toml
            echo "Version bumped from $CURRENT_VERSION to $NEW_VERSION"
          fi
          
      - name: Configure Poetry
        run: |
          poetry config pypi-token.pypi $PYPI_TOKEN
          
      - name: Build and publish
        run: |
          poetry build
          poetry publish 